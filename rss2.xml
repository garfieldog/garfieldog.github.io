<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title><![CDATA[Mew]]></title>
    <link>http://garfieldog.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    <description><![CDATA[只有猪肉卷是永恒的]]></description>
    <pubDate>Tue, 18 Aug 2015 09:22:16 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title><![CDATA[Leetcode解题-去除有序数组中的重复元素]]></title>
      <link>http://garfieldog.github.io/2015/08/18/remove-duplicates-from-sorted-array/</link>
      <guid>http://garfieldog.github.io/2015/08/18/remove-duplicates-from-sorted-array/</guid>
      <pubDate>Tue, 18 Aug 2015 08:34:22 GMT</pubDate>
      <description>
      <![CDATA[<h2 id="描述">描述</h2><blockquote>
<p>Given a sorted array, remove the duplicates in place such that each element appear only once and return t]]>
      </description>
      <content:encoded><![CDATA[<h2 id="描述">描述</h2><blockquote>
<p>Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.</p>
<p>Do not allocate extra space for another array, you must do this in place with constant memory.</p>
<p>For example,<br>Given input array nums = [1,1,2],</p>
<p>Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn’t matter what you leave beyond the new length.</p>
</blockquote>
<p>给定一个排序后的数组，要求移除重复的元素，返回新的数组长度。要求O(1)空间</p>
<h2 id="分析">分析</h2><p>这是一道简单题，使用两指针，一个记录去重后数组的尾部，一个扫原数组。可以实现inplace的时间O(n)空间O(1)的算法。另外，理解原题后就会发现，其实“有序”这个限定过于严格，只要保证相同的元素排列在一起就可以使用该算法。比如：[6, 6, 8, 8, 8, 7]</p>
<h2 id="代码">代码</h2><h3 id="Python">Python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeDuplicates</span><span class="params">(self, nums)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> nums:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums[<span class="number">1</span>:]:</span><br><span class="line">            <span class="keyword">if</span> n != nums[i - <span class="number">1</span>]:</span><br><span class="line">                nums[i] = n</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> i</span><br></pre></td></tr></table></figure>
]]></content:encoded>
      <comments>http://garfieldog.github.io/2015/08/18/remove-duplicates-from-sorted-array/#disqus_thread</comments>
    </item>
    
    <item>
      <title><![CDATA[Mew]]></title>
      <link>http://garfieldog.github.io/2015/08/18/mew/</link>
      <guid>http://garfieldog.github.io/2015/08/18/mew/</guid>
      <pubDate>Tue, 18 Aug 2015 02:56:14 GMT</pubDate>
      <description>
      <![CDATA[<h2 id="猪肉卷">猪肉卷</h2><blockquote>
<p>我见过你们人类难以置信的事，<br>我见过太空飞船在猎户星座的边缘被击中，<br>燃起熊熊火光。<br>我见过Ｃ射线，<br>划过“唐怀瑟之门”那幽暗的宇宙空间。<br>然而所有的这些时刻都将消失在时间里，]]>
      </description>
      <content:encoded><![CDATA[<h2 id="猪肉卷">猪肉卷</h2><blockquote>
<p>我见过你们人类难以置信的事，<br>我见过太空飞船在猎户星座的边缘被击中，<br>燃起熊熊火光。<br>我见过Ｃ射线，<br>划过“唐怀瑟之门”那幽暗的宇宙空间。<br>然而所有的这些时刻都将消失在时间里，<br>就像……泪水……消失在雨中一样。<br>……<br>哎这炸酱面该下锅了吧！？</p>
</blockquote>
<h2 id="千层面">千层面</h2><p>$ E = mc^2 $</p>
<h2 id="披萨">披萨</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">partition</span><span class="params">(arr, start, end)</span>:</span></span><br><span class="line">    pivot = arr[start]</span><br><span class="line">    arr[end], arr[start] = arr[start], arr[end]</span><br><span class="line">    i = start</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> xrange(start, end, <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> arr[j] &lt;= pivot:</span><br><span class="line">            <span class="keyword">if</span> i != j:</span><br><span class="line">                arr[i], arr[j] = arr[j], arr[i]</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">    arr[end], arr[i] = arr[i], arr[end]</span><br><span class="line">    <span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">qsort_r</span><span class="params">(arr, start, end)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> start &lt; end:</span><br><span class="line">        p = partition(arr, start, end)</span><br><span class="line">        qsort_r(arr, start, p - <span class="number">1</span>)</span><br><span class="line">        qsort_r(arr, p + <span class="number">1</span>, end)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">qsort</span><span class="params">(arr)</span>:</span></span><br><span class="line">    qsort_r(arr, <span class="number">0</span>, len(arr) - <span class="number">1</span>)</span><br></pre></td></tr></table></figure>
]]></content:encoded>
      <comments>http://garfieldog.github.io/2015/08/18/mew/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
